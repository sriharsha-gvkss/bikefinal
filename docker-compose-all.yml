services:
  # PostgreSQL Database
  postgres:
    image: postgres:12
    container_name: biketaxi-postgres
    environment:
      POSTGRES_DB: biketaxi
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - biketaxi-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: biketaxi-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped
    networks:
      - biketaxi-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: biketaxi-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: unless-stopped
    networks:
      - biketaxi-network

  # Booking Service
  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    container_name: biketaxi-booking-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/biketaxi
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
    restart: unless-stopped
    networks:
      - biketaxi-network

  # Driver Matching Service
  driver-matching-service:
    build:
      context: ./driver-matching-service
      dockerfile: Dockerfile
    container_name: biketaxi-matching-service
    ports:
      - "8081:8081"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - biketaxi-network

  # Combined Frontend (Rider UI + Driver Simulator)
  frontend:
    image: nginx:alpine
    container_name: biketaxi-frontend
    ports:
      - "5500:80"
    volumes:
      - ./main-ui/build:/usr/share/nginx/html
      - ./driver-simulator-react/build:/usr/share/nginx/html/driver-simulator
    restart: unless-stopped
    networks:
      - biketaxi-network

volumes:
  postgres_data:

networks:
  biketaxi-network:
    driver: bridge 